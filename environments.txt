Symmetric environment behaviour:
module environment
	water_visib : [min_visib..max_visib] init round((max_visib-min_visib)/2);
	[step] true -> current_prob/2: (water_visib'= (water_visib=min_visib? min_visib : water_visib-1))
					+ current_prob/2: (water_visib'= (water_visib=max_visib? max_visib : water_visib+1))
                    + 1-current_prob: true;
endmodule

Asymmetric environment behaviour:
module environment
	water_visib : [min_visib..max_visib] init round((max_visib-min_visib)/2);
	[step] true -> current_prob: (water_visib'= (water_visib=min_visib? min_visib : water_visib-1))
					+ (1-current_prob)/2: (water_visib'= (water_visib=max_visib? max_visib : water_visib+1))
                    + (1-current_prob)/2: true;
endmodule